#!/bin/bash

set -e
if [[ ! -f ./releaser ]]; then
  wget --quiet http://http.archive.ai-traders.com/releaser/1.1.0/releaser || { echo "Cannot download releaser, ignoring."; }
fi
if [[ -f ./releaser ]]; then
  source ./releaser
fi
if [[ ! -f ./docker-ops ]]; then
  wget --quiet http://http.archive.ai-traders.com/docker-ops/0.3.3/docker-ops || { echo "Cannot download docker-ops, ignoring."; }
fi
if [[ -f ./docker-ops ]]; then
  source ./docker-ops
fi

image_name="java-ide"
image_registry="docker-registry.ai-traders.com"
image_dir="./image"
imagerc_filename="imagerc"

command="$1"
case "${command}" in
  set_version)
      if [[ -n "$2" ]]; then
        next_version="$2"
        releaser::set_version_in_changelog "${changelog_file}" "${next_version}"
        releaser::set_next_oversion "${next_version}"
      else
        next_version=$(releaser::get_next_oversion)
        releaser::set_version_in_changelog "${changelog_file}" "${next_version}"
      fi
      exit $?
      ;;
  verify_version)
      releaser::verify_version_for_release
      exit $?
      ;;
  build)
      image_tag=$(git rev-parse HEAD)
      ( set -x; cd "${image_dir}"; docker build -t "${image_name}:${image_tag}" .; )
      docker_ops::create_imagerc "${image_dir}" "${imagerc_filename}" "${image_name}" "${image_tag}" "${image_registry}"
      docker_ops::push_tmp "${image_name}" "${image_tag}" "${image_registry}"
      exit $?
      ;;
  itest)
      docker_ops::source_imagerc "${image_dir}" "${imagerc_filename}"
      echo "Testing image: ${AIT_DOCKER_IMAGE_URL}"
      # use the production ENTRYPOINT
      echo "DOJO_DOCKER_IMAGE=\"${AIT_DOCKER_IMAGE_URL}\"" > Dojofile.to_be_tested
      # use real identity, it is needed to create vm in openstack
      echo "DOJO_WORK_OUTER=$(pwd)/test/integration/test_dojo_work" >> Dojofile.to_be_tested
      time bats "$(pwd)/test/integration/end_user/bats"
      exit $?
      ;;
  example)
      docker_ops::source_imagerc "${image_dir}" "${imagerc_filename}"
      echo "Testing image: ${AIT_DOCKER_IMAGE_URL}"
      # use the production ENTRYPOINT
      echo "DOJO_DOCKER_IMAGE=\"${AIT_DOCKER_IMAGE_URL}\"" > Dojofile.example
      echo "DOJO_DOCKER_OPTIONS=\"-v /etc/localtime:/etc/localtime\"" >> Dojofile.example
      # this uses real identity, but you can use mocked one with:
      # echo "DOJO_IDENTITY_OUTER=\"$(pwd)/test/integration/identities/full\"" >> Dojofile.example
      echo "DOJO_WORK_OUTER=$(pwd)/test/integration/test_dojo_work" >> Dojofile.example
      dojo -c Dojofile.example
      exit $?
      ;;
  release)
      releaser::verify_version_for_release
      releaser::git_tag_from_oversion
      old_version=$(releaser::get_next_oversion)
      next_version=$(releaser::bump_patch_version "${old_version}")
      releaser::set_next_oversion "${next_version}"
      exit $?
      ;;
  publish)
      version=$(releaser::get_last_version_from_whole_changelog "${changelog_file}")
      releaser::validate_version_is_semver "${version}"
      docker_ops::push_production "${image_dir}"  "${imagerc_filename}" "${image_name}" "${version}" "${image_registry}"
      exit $?
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
